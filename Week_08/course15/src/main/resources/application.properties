# 两个mysql，两个库，演示分库分表

# mysql端口：3316；数据库：myshop1；表：t_product_1、t_product_2
# mysql端口：3326；数据库：myshop2；表：t_product_1、t_product_2


# 数据源 db0,db1
sharding.jdbc.datasource.names=db0,db1

# 第一个数据库
sharding.jdbc.datasource.db0.type=com.zaxxer.hikari.HikariDataSource
sharding.jdbc.datasource.db0.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.db0.jdbc-url=jdbc:mysql://localhost:3316/myshop1?useUnicode=true&characterEncoding=utf-8
sharding.jdbc.datasource.db0.username=root
sharding.jdbc.datasource.db0.password=123456

# 第二个数据库
sharding.jdbc.datasource.db1.type=com.zaxxer.hikari.HikariDataSource
sharding.jdbc.datasource.db1.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.db1.jdbc-url=jdbc:mysql://localhost:3326/myshop2?useUnicode=true&characterEncoding=utf-8
sharding.jdbc.datasource.db1.username=root
sharding.jdbc.datasource.db1.password=123456

#product表

# 分库策略
sharding.jdbc.config.sharding.tables.t_product.database-strategy.inline.sharding-column=id
sharding.jdbc.config.sharding.tables.t_product.database-strategy.inline.algorithm-expression=db$->{id%2}
sharding.jdbc.config.sharding.tables.t_product.actual-data-nodes=db$->{0..1}.t_product_$->{0..1}

sharding.jdbc.config.sharding.tables.t_product.table-strategy.inline.sharding-column=create_time
sharding.jdbc.config.sharding.tables.t_product.table-strategy.inline.algorithm-expression=t_product_$->{create_time%2}
# 配置主键生成策略
sharding.jdbc.config.sharding.tables.t_product.key-generator.column=id
sharding.jdbc.config.sharding.tables.t_product.key-generator.type=SNOWFLAKE


# 打印执行的数据库以及语句
sharding.jdbc.config.props.sql.show=true
spring.main.allow-bean-definition-overriding=true

sharding.binding-tables[0]=t_product